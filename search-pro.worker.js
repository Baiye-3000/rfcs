const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":15,\"nextId\":15,\"documentIds\":{\"0\":\"0\",\"1\":\"0#table-of-contents\",\"2\":\"0#when-you-need-to-follow-this-process\",\"3\":\"0#sub-team-specific-guidelines\",\"4\":\"0#before-creating-an-rfc\",\"5\":\"0#what-the-process-is\",\"6\":\"0#the-rfc-life-cycle\",\"7\":\"0#reviewing-rfcs\",\"8\":\"0#implementing-an-rfc\",\"9\":\"0#rfc-postponement\",\"10\":\"0#help-this-is-all-too-informal\",\"11\":\"0#license\",\"12\":\"0#contributions\",\"13\":\"1\",\"14\":\"2\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[6,64],\"1\":[3,35],\"2\":[7,120],\"3\":[4,27],\"4\":[4,128],\"5\":[4,302],\"6\":[4,149],\"7\":[2,76],\"8\":[3,89],\"9\":[2,111],\"10\":[7,32],\"11\":[1,49],\"12\":[1,32],\"13\":[1,3],\"14\":[1]},\"averageFieldLength\":[3.3333333333333335,86.92857142857143],\"storedFields\":{\"0\":{\"h\":\"Rust RFCs - RFC Book - Active RFC List\",\"t\":[\"The \\\"RFC\\\" (request for comments) process is intended to provide a consistent and controlled path for changes to Rust (such as new features) so that all stakeholders can be confident about the direction of the project.\",\"Many changes, including bug fixes and documentation improvements can be implemented and reviewed via the normal GitHub pull request workflow.\",\"Some changes though are \\\"substantial\\\", and we ask that these be put through a bit of a design process and produce a consensus among the Rust community and the sub-teams.\"]},\"1\":{\"h\":\"Table of Contents\",\"t\":[\"Opening\",\"Table of Contents\",\"When you need to follow this process\",\"Sub-team specific guidelines\",\"Before creating an RFC\",\"What the process is\",\"The RFC life-cycle\",\"Reviewing RFCs\",\"Implementing an RFC\",\"RFC Postponement\",\"Help this is all too informal!\",\"License\",\"Contributions\"]},\"2\":{\"h\":\"When you need to follow this process\",\"t\":[\"You need to follow this process if you intend to make \\\"substantial\\\" changes to Rust, Cargo, Crates.io, or the RFC process itself. What constitutes a \\\"substantial\\\" change is evolving based on community norms and varies depending on what part of the ecosystem you are proposing to change, but may include the following.\",\"Any semantic or syntactic change to the language that is not a bugfix.\",\"Removing language features, including those that are feature-gated.\",\"Changes to the interface between the compiler and libraries, including lang items and intrinsics.\",\"Additions to std.\",\"Some changes do not require an RFC:\",\"Rephrasing, reorganizing, refactoring, or otherwise \\\"changing shape does not change meaning\\\".\",\"Additions that strictly improve objective, numerical quality criteria (warning removal, speedup, better platform coverage, more parallelism, trap more errors, etc.)\",\"Additions only likely to be noticed by other developers-of-rust, invisible to users-of-rust.\",\"If you submit a pull request to implement a new feature without going through the RFC process, it may be closed with a polite request to submit an RFC first.\"]},\"3\":{\"h\":\"Sub-team specific guidelines\",\"t\":[\"For more details on when an RFC is required for the following areas, please see the Rust community's sub-team specific guidelines for:\",\"language changes,\",\"library changes,\",\"compiler changes.\"]},\"4\":{\"h\":\"Before creating an RFC\",\"t\":[\"A hastily-proposed RFC can hurt its chances of acceptance. Low quality proposals, proposals for previously-rejected features, or those that don't fit into the near-term roadmap, may be quickly rejected, which can be demotivating for the unprepared contributor. Laying some groundwork ahead of the RFC can make the process smoother.\",\"Although there is no single way to prepare for submitting an RFC, it is generally a good idea to pursue feedback from other project developers beforehand, to ascertain that the RFC may be desirable; having a consistent impact on the project requires concerted effort toward consensus-building.\",\"The most common preparations for writing and submitting an RFC include talking the idea over on our official Zulip server, discussing the topic on our developer discussion forum, and occasionally posting \\\"pre-RFCs\\\" on the developer forum. You may file issues on this repo for discussion, but these are not actively looked at by the teams.\",\"As a rule of thumb, receiving encouraging feedback from long-standing project developers, and particularly members of the relevant sub-team is a good indication that the RFC is worth pursuing.\"]},\"5\":{\"h\":\"What the process is\",\"t\":[\"In short, to get a major feature added to Rust, one must first get the RFC merged into the RFC repository as a markdown file. At that point the RFC is \\\"active\\\" and may be implemented with the goal of eventual inclusion into Rust.\",\"Fork the RFC repo RFC repository\",\"Copy 0000-template.md to text/0000-my-feature.md (where \\\"my-feature\\\" is descriptive). Don't assign an RFC number yet; This is going to be the PR number and we'll rename the file accordingly if the RFC is accepted.\",\"Fill in the RFC. Put care into the details: RFCs that do not present convincing motivation, demonstrate lack of understanding of the design's impact, or are disingenuous about the drawbacks or alternatives tend to be poorly-received.\",\"Submit a pull request. As a pull request the RFC will receive design feedback from the larger community, and the author should be prepared to revise it in response.\",\"Now that your RFC has an open pull request, use the issue number of the PR to rename the file: update your 0000- prefix to that number. Also update the \\\"RFC PR\\\" link at the top of the file.\",\"Each pull request will be labeled with the most relevant sub-team, which will lead to its being triaged by that team in a future meeting and assigned to a member of the subteam.\",\"Build consensus and integrate feedback. RFCs that have broad support are much more likely to make progress than those that don't receive any comments. Feel free to reach out to the RFC assignee in particular to get help identifying stakeholders and obstacles.\",\"The sub-team will discuss the RFC pull request, as much as possible in the comment thread of the pull request itself. Offline discussion will be summarized on the pull request comment thread.\",\"RFCs rarely go through this process unchanged, especially as alternatives and drawbacks are shown. You can make edits, big and small, to the RFC to clarify or change the design, but make changes as new commits to the pull request, and leave a comment on the pull request explaining your changes. Specifically, do not squash or rebase commits after they are visible on the pull request.\",\"At some point, a member of the subteam will propose a \\\"motion for final comment period\\\" (FCP), along with a disposition for the RFC (merge, close, or postpone). \",\"This step is taken when enough of the tradeoffs have been discussed that the subteam is in a position to make a decision. That does not require consensus amongst all participants in the RFC thread (which is usually impossible). However, the argument supporting the disposition on the RFC needs to have already been clearly articulated, and there should not be a strong consensus against that position outside of the subteam. Subteam members use their best judgment in taking this step, and the FCP itself ensures there is ample time and notification for stakeholders to push back if it is made prematurely.\",\"For RFCs with lengthy discussion, the motion to FCP is usually preceded by a summary comment trying to lay out the current state of the discussion and major tradeoffs/points of disagreement.\",\"Before actually entering FCP, all members of the subteam must sign off; this is often the point at which many subteam members first review the RFC in full depth.\",\"The FCP lasts ten calendar days, so that it is open for at least 5 business days. It is also advertised widely, e.g. in This Week in Rust. This way all stakeholders have a chance to lodge any final objections before a decision is reached.\",\"In most cases, the FCP period is quiet, and the RFC is either merged or closed. However, sometimes substantial new arguments or ideas are raised, the FCP is canceled, and the RFC goes back into development mode.\"]},\"6\":{\"h\":\"The RFC life-cycle\",\"t\":[\"Once an RFC becomes \\\"active\\\" then authors may implement it and submit the feature as a pull request to the Rust repo. Being \\\"active\\\" is not a rubber stamp, and in particular still does not mean the feature will ultimately be merged; it does mean that in principle all the major stakeholders have agreed to the feature and are amenable to merging it.\",\"Furthermore, the fact that a given RFC has been accepted and is \\\"active\\\" implies nothing about what priority is assigned to its implementation, nor does it imply anything about whether a Rust developer has been assigned the task of implementing the feature. While it is not necessary that the author of the RFC also write the implementation, it is by far the most effective way to see an RFC through to completion: authors should not expect that other project developers will take on responsibility for implementing their accepted feature.\",\"Modifications to \\\"active\\\" RFCs can be done in follow-up pull requests. We strive to write each RFC in a manner that it will reflect the final design of the feature; but the nature of the process means that we cannot expect every merged RFC to actually reflect what the end result will be at the time of the next major release.\",\"In general, once accepted, RFCs should not be substantially changed. Only very minor changes should be submitted as amendments. More substantial changes should be new RFCs, with a note added to the original RFC. Exactly what counts as a \\\"very minor change\\\" is up to the sub-team to decide; check Sub-team specific guidelines for more details.\"]},\"7\":{\"h\":\"Reviewing RFCs\",\"t\":[\"While the RFC pull request is up, the sub-team may schedule meetings with the author and/or relevant stakeholders to discuss the issues in greater detail, and in some cases the topic may be discussed at a sub-team meeting. In either case a summary from the meeting will be posted back to the RFC pull request.\",\"A sub-team makes final decisions about RFCs after the benefits and drawbacks are well understood. These decisions can be made at any time, but the sub-team will regularly issue decisions. When a decision is made, the RFC pull request will either be merged or closed. In either case, if the reasoning is not clear from the discussion in thread, the sub-team will add a comment describing the rationale for the decision.\"]},\"8\":{\"h\":\"Implementing an RFC\",\"t\":[\"Some accepted RFCs represent vital features that need to be implemented right away. Other accepted RFCs can represent features that can wait until some arbitrary developer feels like doing the work. Every accepted RFC has an associated issue tracking its implementation in the Rust repository; thus that associated issue can be assigned a priority via the triage process that the team uses for all issues in the Rust repository.\",\"The author of an RFC is not obligated to implement it. Of course, the RFC author (like any other developer) is welcome to post an implementation for review after the RFC has been accepted.\",\"If you are interested in working on the implementation for an \\\"active\\\" RFC, but cannot determine if someone else is already working on it, feel free to ask (e.g. by leaving a comment on the associated issue).\"]},\"9\":{\"h\":\"RFC Postponement\",\"t\":[\"Some RFC pull requests are tagged with the \\\"postponed\\\" label when they are closed (as part of the rejection process). An RFC closed with \\\"postponed\\\" is marked as such because we want neither to think about evaluating the proposal nor about implementing the described feature until some time in the future, and we believe that we can afford to wait until then to do so. Historically, \\\"postponed\\\" was used to postpone features until after 1.0. Postponed pull requests may be re-opened when the time is right. We don't have any formal process for that, you should ask members of the relevant sub-team.\",\"Usually an RFC pull request marked as \\\"postponed\\\" has already passed an informal first round of evaluation, namely the round of \\\"do we think we would ever possibly consider making this change, as outlined in the RFC pull request, or some semi-obvious variation of it.\\\" (When the answer to the latter question is \\\"no\\\", then the appropriate response is to close the RFC, not postpone it.)\"]},\"10\":{\"h\":\"Help this is all too informal!\",\"t\":[\"The process is intended to be as lightweight as reasonable for the present circumstances. As usual, we are trying to let the process be driven by consensus and community norms, not impose more structure than necessary.\"]},\"11\":{\"h\":\"License\",\"t\":[\"This repository is currently in the process of being licensed under either of:\",\"Apache License, Version 2.0, (LICENSE-APACHE or https://www.apache.org/licenses/LICENSE-2.0)\",\"MIT license (LICENSE-MIT or https://opensource.org/licenses/MIT)\",\"at your option. Some parts of the repository are already licensed according to those terms. For more see RFC 2044 and its tracking issue.\"]},\"12\":{\"h\":\"Contributions\",\"t\":[\"Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\"]},\"13\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"14\":{\"h\":\"\"}},\"dirtCount\":0,\"index\":[[\"404\",{\"1\":{\"13\":1}}],[\"2044\",{\"1\":{\"11\":1}}],[\"2\",{\"1\":{\"11\":2,\"12\":1}}],[\"0\",{\"1\":{\"9\":1,\"11\":2,\"12\":1}}],[\"0000\",{\"1\":{\"5\":3}}],[\"1\",{\"1\":{\"9\":1}}],[\"5\",{\"1\":{\"5\":1}}],[\"judgment\",{\"1\":{\"5\":1}}],[\"yet\",{\"1\":{\"5\":1}}],[\"your\",{\"1\":{\"5\":3,\"11\":1}}],[\"you\",{\"0\":{\"2\":1},\"1\":{\"1\":1,\"2\":4,\"4\":1,\"5\":1,\"8\":1,\"9\":1,\"12\":2}}],[\"zulip\",{\"1\":{\"4\":1}}],[\"up\",{\"1\":{\"6\":2,\"7\":1}}],[\"update\",{\"1\":{\"5\":2}}],[\"ultimately\",{\"1\":{\"6\":1}}],[\"usual\",{\"1\":{\"10\":1}}],[\"usually\",{\"1\":{\"5\":2,\"9\":1}}],[\"used\",{\"1\":{\"9\":1}}],[\"uses\",{\"1\":{\"8\":1}}],[\"use\",{\"1\":{\"5\":2}}],[\"users\",{\"1\":{\"2\":1}}],[\"unless\",{\"1\":{\"12\":1}}],[\"under\",{\"1\":{\"11\":1}}],[\"understood\",{\"1\":{\"7\":1}}],[\"understanding\",{\"1\":{\"5\":1}}],[\"until\",{\"1\":{\"8\":1,\"9\":3}}],[\"unchanged\",{\"1\":{\"5\":1}}],[\"unprepared\",{\"1\":{\"4\":1}}],[\"question\",{\"1\":{\"9\":1}}],[\"quiet\",{\"1\":{\"5\":1}}],[\"quickly\",{\"1\":{\"4\":1}}],[\"quality\",{\"1\":{\"2\":1,\"4\":1}}],[\"https\",{\"1\":{\"11\":2}}],[\"historically\",{\"1\":{\"9\":1}}],[\"however\",{\"1\":{\"5\":2}}],[\"have\",{\"1\":{\"5\":4,\"6\":1,\"9\":1}}],[\"having\",{\"1\":{\"4\":1}}],[\"has\",{\"1\":{\"5\":1,\"6\":2,\"8\":2,\"9\":1}}],[\"hastily\",{\"1\":{\"4\":1}}],[\"hurt\",{\"1\":{\"4\":1}}],[\"help\",{\"0\":{\"10\":1},\"1\":{\"1\":1,\"5\":1}}],[\"mit\",{\"1\":{\"11\":3}}],[\"minor\",{\"1\":{\"6\":2}}],[\"much\",{\"1\":{\"5\":2}}],[\"must\",{\"1\":{\"5\":2}}],[\"my\",{\"1\":{\"5\":2}}],[\"md\",{\"1\":{\"5\":2}}],[\"merging\",{\"1\":{\"6\":1}}],[\"merge\",{\"1\":{\"5\":1}}],[\"merged\",{\"1\":{\"5\":2,\"6\":2,\"7\":1}}],[\"means\",{\"1\":{\"6\":1}}],[\"mean\",{\"1\":{\"6\":2}}],[\"meaning\",{\"1\":{\"2\":1}}],[\"member\",{\"1\":{\"5\":2}}],[\"members\",{\"1\":{\"4\":1,\"5\":3,\"9\":1}}],[\"meetings\",{\"1\":{\"7\":1}}],[\"meeting\",{\"1\":{\"5\":1,\"7\":2}}],[\"modifications\",{\"1\":{\"6\":1}}],[\"mode\",{\"1\":{\"5\":1}}],[\"motion\",{\"1\":{\"5\":2}}],[\"motivation\",{\"1\":{\"5\":1}}],[\"most\",{\"1\":{\"4\":1,\"5\":2,\"6\":1}}],[\"more\",{\"1\":{\"2\":2,\"3\":1,\"5\":1,\"6\":2,\"10\":1,\"11\":1}}],[\"making\",{\"1\":{\"9\":1}}],[\"makes\",{\"1\":{\"7\":1}}],[\"make\",{\"1\":{\"2\":1,\"4\":1,\"5\":4}}],[\"marked\",{\"1\":{\"9\":2}}],[\"markdown\",{\"1\":{\"5\":1}}],[\"manner\",{\"1\":{\"6\":1}}],[\"many\",{\"1\":{\"0\":1,\"5\":1}}],[\"made\",{\"1\":{\"5\":1,\"7\":2}}],[\"major\",{\"1\":{\"5\":2,\"6\":2}}],[\"may\",{\"1\":{\"2\":2,\"4\":3,\"5\":1,\"6\":1,\"7\":2,\"9\":1}}],[\"let\",{\"1\":{\"10\":1}}],[\"lengthy\",{\"1\":{\"5\":1}}],[\"leaving\",{\"1\":{\"8\":1}}],[\"leave\",{\"1\":{\"5\":1}}],[\"least\",{\"1\":{\"5\":1}}],[\"lead\",{\"1\":{\"5\":1}}],[\"ll\",{\"1\":{\"5\":1}}],[\"lodge\",{\"1\":{\"5\":1}}],[\"long\",{\"1\":{\"4\":1}}],[\"looked\",{\"1\":{\"4\":1}}],[\"low\",{\"1\":{\"4\":1}}],[\"latter\",{\"1\":{\"9\":1}}],[\"label\",{\"1\":{\"9\":1}}],[\"labeled\",{\"1\":{\"5\":1}}],[\"lasts\",{\"1\":{\"5\":1}}],[\"lay\",{\"1\":{\"5\":1}}],[\"laying\",{\"1\":{\"4\":1}}],[\"larger\",{\"1\":{\"5\":1}}],[\"lack\",{\"1\":{\"5\":1}}],[\"lang\",{\"1\":{\"2\":1}}],[\"language\",{\"1\":{\"2\":2,\"3\":1}}],[\"lightweight\",{\"1\":{\"10\":1}}],[\"like\",{\"1\":{\"8\":2}}],[\"likely\",{\"1\":{\"2\":1,\"5\":1}}],[\"link\",{\"1\":{\"5\":1}}],[\"library\",{\"1\":{\"3\":1}}],[\"libraries\",{\"1\":{\"2\":1}}],[\"licenses\",{\"1\":{\"11\":2}}],[\"licensed\",{\"1\":{\"11\":2,\"12\":1}}],[\"license\",{\"0\":{\"11\":1},\"1\":{\"1\":1,\"11\":5,\"12\":1}}],[\"life\",{\"0\":{\"6\":1},\"1\":{\"1\":1}}],[\"list\",{\"0\":{\"0\":1}}],[\"else\",{\"1\":{\"8\":1}}],[\"exactly\",{\"1\":{\"6\":1}}],[\"explicitly\",{\"1\":{\"12\":1}}],[\"explaining\",{\"1\":{\"5\":1}}],[\"expect\",{\"1\":{\"6\":2}}],[\"effective\",{\"1\":{\"6\":1}}],[\"effort\",{\"1\":{\"4\":1}}],[\"either\",{\"1\":{\"5\":1,\"7\":3,\"11\":1}}],[\"e\",{\"1\":{\"5\":1,\"8\":1}}],[\"end\",{\"1\":{\"6\":1}}],[\"entering\",{\"1\":{\"5\":1}}],[\"ensures\",{\"1\":{\"5\":1}}],[\"enough\",{\"1\":{\"5\":1}}],[\"encouraging\",{\"1\":{\"4\":1}}],[\"edits\",{\"1\":{\"5\":1}}],[\"especially\",{\"1\":{\"5\":1}}],[\"each\",{\"1\":{\"5\":1,\"6\":1}}],[\"evaluation\",{\"1\":{\"9\":1}}],[\"evaluating\",{\"1\":{\"9\":1}}],[\"ever\",{\"1\":{\"9\":1}}],[\"every\",{\"1\":{\"6\":1,\"8\":1}}],[\"eventual\",{\"1\":{\"5\":1}}],[\"evolving\",{\"1\":{\"2\":1}}],[\"etc\",{\"1\":{\"2\":1}}],[\"errors\",{\"1\":{\"2\":1}}],[\"ecosystem\",{\"1\":{\"2\":1}}],[\"version\",{\"1\":{\"11\":1}}],[\"very\",{\"1\":{\"6\":2}}],[\"variation\",{\"1\":{\"9\":1}}],[\"varies\",{\"1\":{\"2\":1}}],[\"vital\",{\"1\":{\"8\":1}}],[\"visible\",{\"1\":{\"5\":1}}],[\"via\",{\"1\":{\"0\":1,\"8\":1}}],[\"greater\",{\"1\":{\"7\":1}}],[\"groundwork\",{\"1\":{\"4\":1}}],[\"given\",{\"1\":{\"6\":1}}],[\"github\",{\"1\":{\"0\":1}}],[\"g\",{\"1\":{\"5\":1,\"8\":1}}],[\"general\",{\"1\":{\"6\":1}}],[\"generally\",{\"1\":{\"4\":1}}],[\"get\",{\"1\":{\"5\":3}}],[\"goes\",{\"1\":{\"5\":1}}],[\"go\",{\"1\":{\"5\":1}}],[\"goal\",{\"1\":{\"5\":1}}],[\"good\",{\"1\":{\"4\":2}}],[\"going\",{\"1\":{\"2\":1,\"5\":1}}],[\"gated\",{\"1\":{\"2\":1}}],[\"guidelines\",{\"0\":{\"3\":1},\"1\":{\"1\":1,\"3\":1,\"6\":1}}],[\"option\",{\"1\":{\"11\":1}}],[\"opensource\",{\"1\":{\"11\":1}}],[\"opened\",{\"1\":{\"9\":1}}],[\"open\",{\"1\":{\"5\":2}}],[\"opening\",{\"1\":{\"1\":1}}],[\"obvious\",{\"1\":{\"9\":1}}],[\"obligated\",{\"1\":{\"8\":1}}],[\"objections\",{\"1\":{\"5\":1}}],[\"objective\",{\"1\":{\"2\":1}}],[\"obstacles\",{\"1\":{\"5\":1}}],[\"outlined\",{\"1\":{\"9\":1}}],[\"outside\",{\"1\":{\"5\":1}}],[\"out\",{\"1\":{\"5\":2}}],[\"our\",{\"1\":{\"4\":2}}],[\"occasionally\",{\"1\":{\"4\":1}}],[\"over\",{\"1\":{\"4\":1}}],[\"other\",{\"1\":{\"2\":1,\"4\":1,\"6\":1,\"8\":2}}],[\"otherwise\",{\"1\":{\"2\":1,\"12\":1}}],[\"once\",{\"1\":{\"6\":2}}],[\"one\",{\"1\":{\"5\":1}}],[\"only\",{\"1\":{\"2\":1,\"6\":1}}],[\"on\",{\"1\":{\"2\":2,\"3\":1,\"4\":5,\"5\":4,\"6\":1,\"8\":3}}],[\"org\",{\"1\":{\"11\":2}}],[\"original\",{\"1\":{\"6\":1}}],[\"or\",{\"1\":{\"2\":3,\"4\":1,\"5\":7,\"7\":2,\"9\":1,\"11\":2,\"12\":1}}],[\"often\",{\"1\":{\"5\":1}}],[\"off\",{\"1\":{\"5\":1}}],[\"offline\",{\"1\":{\"5\":1}}],[\"official\",{\"1\":{\"4\":1}}],[\"of\",{\"0\":{\"1\":1},\"1\":{\"0\":2,\"1\":1,\"2\":3,\"4\":4,\"5\":13,\"6\":5,\"8\":2,\"9\":5,\"11\":3}}],[\"www\",{\"1\":{\"11\":1}}],[\"would\",{\"1\":{\"9\":1}}],[\"working\",{\"1\":{\"8\":2}}],[\"work\",{\"1\":{\"8\":1,\"12\":1}}],[\"workflow\",{\"1\":{\"0\":1}}],[\"worth\",{\"1\":{\"4\":1}}],[\"write\",{\"1\":{\"6\":2}}],[\"writing\",{\"1\":{\"4\":1}}],[\"widely\",{\"1\":{\"5\":1}}],[\"will\",{\"1\":{\"5\":6,\"6\":4,\"7\":4}}],[\"with\",{\"1\":{\"2\":1,\"5\":4,\"6\":1,\"7\":1,\"9\":2}}],[\"without\",{\"1\":{\"2\":1,\"12\":1}}],[\"was\",{\"1\":{\"9\":1}}],[\"want\",{\"1\":{\"9\":1}}],[\"wait\",{\"1\":{\"8\":1,\"9\":1}}],[\"way\",{\"1\":{\"4\":1,\"5\":1,\"6\":1}}],[\"warning\",{\"1\":{\"2\":1}}],[\"while\",{\"1\":{\"6\":1,\"7\":1}}],[\"which\",{\"1\":{\"4\":1,\"5\":3}}],[\"whether\",{\"1\":{\"6\":1}}],[\"where\",{\"1\":{\"5\":1}}],[\"when\",{\"0\":{\"2\":1},\"1\":{\"1\":1,\"3\":1,\"5\":1,\"7\":1,\"9\":3}}],[\"what\",{\"0\":{\"5\":1},\"1\":{\"1\":1,\"2\":2,\"6\":3}}],[\"welcome\",{\"1\":{\"8\":1}}],[\"well\",{\"1\":{\"7\":1}}],[\"week\",{\"1\":{\"5\":1}}],[\"we\",{\"1\":{\"0\":1,\"5\":1,\"6\":2,\"9\":6,\"10\":1}}],[\"namely\",{\"1\":{\"9\":1}}],[\"nature\",{\"1\":{\"6\":1}}],[\"number\",{\"1\":{\"5\":4}}],[\"numerical\",{\"1\":{\"2\":1}}],[\"nor\",{\"1\":{\"6\":1,\"9\":1}}],[\"norms\",{\"1\":{\"2\":1,\"10\":1}}],[\"normal\",{\"1\":{\"0\":1}}],[\"now\",{\"1\":{\"5\":1}}],[\"no\",{\"1\":{\"4\":1,\"9\":1}}],[\"note\",{\"1\":{\"6\":1}}],[\"nothing\",{\"1\":{\"6\":1}}],[\"notification\",{\"1\":{\"5\":1}}],[\"noticed\",{\"1\":{\"2\":1}}],[\"not\",{\"1\":{\"2\":3,\"4\":1,\"5\":4,\"6\":5,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"13\":1}}],[\"neither\",{\"1\":{\"9\":1}}],[\"next\",{\"1\":{\"6\":1}}],[\"necessary\",{\"1\":{\"6\":1,\"10\":1}}],[\"near\",{\"1\":{\"4\":1}}],[\"needs\",{\"1\":{\"5\":1}}],[\"need\",{\"0\":{\"2\":1},\"1\":{\"1\":1,\"2\":1,\"8\":1}}],[\"new\",{\"1\":{\"0\":1,\"2\":1,\"5\":2,\"6\":1}}],[\"dual\",{\"1\":{\"12\":1}}],[\"driven\",{\"1\":{\"10\":1}}],[\"drawbacks\",{\"1\":{\"5\":2,\"7\":1}}],[\"days\",{\"1\":{\"5\":2}}],[\"disagreement\",{\"1\":{\"5\":1}}],[\"disposition\",{\"1\":{\"5\":2}}],[\"discussed\",{\"1\":{\"5\":1,\"7\":1}}],[\"discuss\",{\"1\":{\"5\":1,\"7\":1}}],[\"discussion\",{\"1\":{\"4\":2,\"5\":3,\"7\":1}}],[\"discussing\",{\"1\":{\"4\":1}}],[\"disingenuous\",{\"1\":{\"5\":1}}],[\"direction\",{\"1\":{\"0\":1}}],[\"doing\",{\"1\":{\"8\":1}}],[\"done\",{\"1\":{\"6\":1}}],[\"don\",{\"1\":{\"4\":1,\"5\":2,\"9\":1}}],[\"does\",{\"1\":{\"2\":1,\"5\":1,\"6\":3}}],[\"do\",{\"1\":{\"2\":1,\"5\":2,\"9\":2}}],[\"documentation\",{\"1\":{\"0\":1}}],[\"defined\",{\"1\":{\"12\":1}}],[\"determine\",{\"1\":{\"8\":1}}],[\"detail\",{\"1\":{\"7\":1}}],[\"details\",{\"1\":{\"3\":1,\"5\":1,\"6\":1}}],[\"decide\",{\"1\":{\"6\":1}}],[\"decisions\",{\"1\":{\"7\":3}}],[\"decision\",{\"1\":{\"5\":2,\"7\":2}}],[\"development\",{\"1\":{\"5\":1}}],[\"developer\",{\"1\":{\"4\":2,\"6\":1,\"8\":2}}],[\"developers\",{\"1\":{\"2\":1,\"4\":2,\"6\":1}}],[\"depth\",{\"1\":{\"5\":1}}],[\"depending\",{\"1\":{\"2\":1}}],[\"demonstrate\",{\"1\":{\"5\":1}}],[\"demotivating\",{\"1\":{\"4\":1}}],[\"described\",{\"1\":{\"9\":1}}],[\"describing\",{\"1\":{\"7\":1}}],[\"descriptive\",{\"1\":{\"5\":1}}],[\"desirable\",{\"1\":{\"4\":1}}],[\"design\",{\"1\":{\"0\":1,\"5\":3,\"6\":1}}],[\"back\",{\"1\":{\"5\":2,\"7\":1}}],[\"based\",{\"1\":{\"2\":1}}],[\"big\",{\"1\":{\"5\":1}}],[\"bit\",{\"1\":{\"0\":1}}],[\"broad\",{\"1\":{\"5\":1}}],[\"by\",{\"1\":{\"2\":1,\"4\":1,\"5\":2,\"6\":1,\"8\":1,\"10\":1,\"12\":1}}],[\"business\",{\"1\":{\"5\":1}}],[\"build\",{\"1\":{\"5\":1}}],[\"building\",{\"1\":{\"4\":1}}],[\"but\",{\"1\":{\"2\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1}}],[\"bugfix\",{\"1\":{\"2\":1}}],[\"bug\",{\"1\":{\"0\":1}}],[\"believe\",{\"1\":{\"9\":1}}],[\"because\",{\"1\":{\"9\":1}}],[\"becomes\",{\"1\":{\"6\":1}}],[\"benefits\",{\"1\":{\"7\":1}}],[\"best\",{\"1\":{\"5\":1}}],[\"been\",{\"1\":{\"5\":2,\"6\":2,\"8\":1}}],[\"being\",{\"1\":{\"5\":1,\"6\":1,\"11\":1}}],[\"better\",{\"1\":{\"2\":1}}],[\"between\",{\"1\":{\"2\":1}}],[\"beforehand\",{\"1\":{\"4\":1}}],[\"before\",{\"0\":{\"4\":1},\"1\":{\"1\":1,\"5\":2}}],[\"be\",{\"1\":{\"0\":3,\"2\":2,\"4\":3,\"5\":7,\"6\":6,\"7\":4,\"8\":2,\"9\":1,\"10\":2,\"12\":1}}],[\"book\",{\"0\":{\"0\":1}}],[\"schedule\",{\"1\":{\"7\":1}}],[\"sign\",{\"1\":{\"5\":1}}],[\"single\",{\"1\":{\"4\":1}}],[\"squash\",{\"1\":{\"5\":1}}],[\"small\",{\"1\":{\"5\":1}}],[\"smoother\",{\"1\":{\"4\":1}}],[\"shall\",{\"1\":{\"12\":1}}],[\"shape\",{\"1\":{\"2\":1}}],[\"shown\",{\"1\":{\"5\":1}}],[\"should\",{\"1\":{\"5\":2,\"6\":4,\"9\":1}}],[\"short\",{\"1\":{\"5\":1}}],[\"s\",{\"1\":{\"3\":1,\"5\":1}}],[\"semi\",{\"1\":{\"9\":1}}],[\"semantic\",{\"1\":{\"2\":1}}],[\"server\",{\"1\":{\"4\":1}}],[\"see\",{\"1\":{\"3\":1,\"6\":1,\"11\":1}}],[\"speedup\",{\"1\":{\"2\":1}}],[\"specifically\",{\"1\":{\"5\":1}}],[\"specific\",{\"0\":{\"3\":1},\"1\":{\"1\":1,\"3\":1,\"6\":1}}],[\"still\",{\"1\":{\"6\":1}}],[\"structure\",{\"1\":{\"10\":1}}],[\"strive\",{\"1\":{\"6\":1}}],[\"strictly\",{\"1\":{\"2\":1}}],[\"strong\",{\"1\":{\"5\":1}}],[\"step\",{\"1\":{\"5\":2}}],[\"stamp\",{\"1\":{\"6\":1}}],[\"state\",{\"1\":{\"5\":1,\"12\":1}}],[\"standing\",{\"1\":{\"4\":1}}],[\"stakeholders\",{\"1\":{\"0\":1,\"5\":3,\"6\":1,\"7\":1}}],[\"std\",{\"1\":{\"2\":1}}],[\"syntactic\",{\"1\":{\"2\":1}}],[\"summary\",{\"1\":{\"5\":1,\"7\":1}}],[\"summarized\",{\"1\":{\"5\":1}}],[\"supporting\",{\"1\":{\"5\":1}}],[\"support\",{\"1\":{\"5\":1}}],[\"subteam\",{\"1\":{\"5\":7}}],[\"submitted\",{\"1\":{\"6\":1,\"12\":1}}],[\"submitting\",{\"1\":{\"4\":2}}],[\"submit\",{\"1\":{\"2\":2,\"5\":1,\"6\":1}}],[\"sub\",{\"0\":{\"3\":1},\"1\":{\"0\":1,\"1\":1,\"3\":1,\"4\":1,\"5\":2,\"6\":2,\"7\":5,\"9\":1}}],[\"substantially\",{\"1\":{\"6\":1}}],[\"substantial\",{\"1\":{\"0\":1,\"2\":2,\"5\":1,\"6\":1}}],[\"such\",{\"1\":{\"0\":1,\"9\":1}}],[\"someone\",{\"1\":{\"8\":1}}],[\"sometimes\",{\"1\":{\"5\":1}}],[\"some\",{\"1\":{\"0\":1,\"2\":1,\"4\":1,\"5\":1,\"7\":1,\"8\":2,\"9\":3,\"11\":1}}],[\"so\",{\"1\":{\"0\":1,\"5\":1,\"9\":1}}],[\"far\",{\"1\":{\"6\":1}}],[\"fact\",{\"1\":{\"6\":1}}],[\"furthermore\",{\"1\":{\"6\":1}}],[\"full\",{\"1\":{\"5\":1}}],[\"future\",{\"1\":{\"5\":1,\"9\":1}}],[\"fcp\",{\"1\":{\"5\":7}}],[\"free\",{\"1\":{\"5\":1,\"8\":1}}],[\"from\",{\"1\":{\"4\":2,\"5\":1,\"7\":2}}],[\"feels\",{\"1\":{\"8\":1}}],[\"feel\",{\"1\":{\"5\":1,\"8\":1}}],[\"feedback\",{\"1\":{\"4\":2,\"5\":2}}],[\"feature\",{\"1\":{\"2\":2,\"5\":3,\"6\":6,\"9\":1}}],[\"features\",{\"1\":{\"0\":1,\"2\":1,\"4\":1,\"8\":2,\"9\":1}}],[\"final\",{\"1\":{\"5\":2,\"6\":1,\"7\":1}}],[\"fill\",{\"1\":{\"5\":1}}],[\"file\",{\"1\":{\"4\":1,\"5\":4}}],[\"fit\",{\"1\":{\"4\":1}}],[\"first\",{\"1\":{\"2\":1,\"5\":2,\"9\":1}}],[\"fixes\",{\"1\":{\"0\":1}}],[\"found\",{\"1\":{\"13\":1}}],[\"following\",{\"1\":{\"2\":1,\"3\":1}}],[\"follow\",{\"0\":{\"2\":1},\"1\":{\"1\":1,\"2\":1,\"6\":1}}],[\"formal\",{\"1\":{\"9\":1}}],[\"fork\",{\"1\":{\"5\":1}}],[\"forum\",{\"1\":{\"4\":2}}],[\"for\",{\"1\":{\"0\":2,\"3\":3,\"4\":5,\"5\":5,\"6\":2,\"7\":1,\"8\":3,\"9\":1,\"10\":1,\"11\":1,\"12\":1}}],[\"circumstances\",{\"1\":{\"10\":1}}],[\"check\",{\"1\":{\"6\":1}}],[\"chance\",{\"1\":{\"5\":1}}],[\"chances\",{\"1\":{\"4\":1}}],[\"changing\",{\"1\":{\"2\":1}}],[\"changed\",{\"1\":{\"6\":1}}],[\"change\",{\"1\":{\"2\":4,\"5\":1,\"6\":1,\"9\":1}}],[\"changes\",{\"1\":{\"0\":3,\"2\":3,\"3\":3,\"5\":2,\"6\":2}}],[\"currently\",{\"1\":{\"11\":1}}],[\"current\",{\"1\":{\"5\":1}}],[\"clear\",{\"1\":{\"7\":1}}],[\"clearly\",{\"1\":{\"5\":1}}],[\"close\",{\"1\":{\"5\":1,\"9\":1}}],[\"closed\",{\"1\":{\"2\":1,\"5\":1,\"7\":1,\"9\":2}}],[\"clarify\",{\"1\":{\"5\":1}}],[\"criteria\",{\"1\":{\"2\":1}}],[\"crates\",{\"1\":{\"2\":1}}],[\"creating\",{\"0\":{\"4\":1},\"1\":{\"1\":1}}],[\"case\",{\"1\":{\"7\":2}}],[\"cases\",{\"1\":{\"5\":1,\"7\":1}}],[\"calendar\",{\"1\":{\"5\":1}}],[\"care\",{\"1\":{\"5\":1}}],[\"cargo\",{\"1\":{\"2\":1}}],[\"cannot\",{\"1\":{\"6\":1,\"8\":1}}],[\"canceled\",{\"1\":{\"5\":1}}],[\"can\",{\"1\":{\"0\":2,\"4\":3,\"5\":1,\"6\":1,\"7\":1,\"8\":3,\"9\":1}}],[\"cycle\",{\"0\":{\"6\":1},\"1\":{\"1\":1}}],[\"course\",{\"1\":{\"8\":1}}],[\"counts\",{\"1\":{\"6\":1}}],[\"copy\",{\"1\":{\"5\":1}}],[\"coverage\",{\"1\":{\"2\":1}}],[\"completion\",{\"1\":{\"6\":1}}],[\"compiler\",{\"1\":{\"2\":1,\"3\":1}}],[\"commits\",{\"1\":{\"5\":2}}],[\"comment\",{\"1\":{\"5\":5,\"7\":1,\"8\":1}}],[\"comments\",{\"1\":{\"0\":1,\"5\":1}}],[\"common\",{\"1\":{\"4\":1}}],[\"community\",{\"1\":{\"0\":1,\"2\":1,\"3\":1,\"5\":1,\"10\":1}}],[\"conditions\",{\"1\":{\"12\":1}}],[\"convincing\",{\"1\":{\"5\":1}}],[\"concerted\",{\"1\":{\"4\":1}}],[\"contribution\",{\"1\":{\"12\":1}}],[\"contributions\",{\"0\":{\"12\":1},\"1\":{\"1\":1}}],[\"contributor\",{\"1\":{\"4\":1}}],[\"controlled\",{\"1\":{\"0\":1}}],[\"contents\",{\"0\":{\"1\":1},\"1\":{\"1\":1}}],[\"consider\",{\"1\":{\"9\":1}}],[\"consistent\",{\"1\":{\"0\":1,\"4\":1}}],[\"constitutes\",{\"1\":{\"2\":1}}],[\"consensus\",{\"1\":{\"0\":1,\"4\":1,\"5\":3,\"10\":1}}],[\"confident\",{\"1\":{\"0\":1}}],[\"period\",{\"1\":{\"5\":2}}],[\"priority\",{\"1\":{\"6\":1,\"8\":1}}],[\"principle\",{\"1\":{\"6\":1}}],[\"pr\",{\"1\":{\"5\":3}}],[\"preceded\",{\"1\":{\"5\":1}}],[\"prematurely\",{\"1\":{\"5\":1}}],[\"prefix\",{\"1\":{\"5\":1}}],[\"present\",{\"1\":{\"5\":1,\"10\":1}}],[\"pre\",{\"1\":{\"4\":1}}],[\"preparations\",{\"1\":{\"4\":1}}],[\"prepared\",{\"1\":{\"5\":1}}],[\"prepare\",{\"1\":{\"4\":1}}],[\"previously\",{\"1\":{\"4\":1}}],[\"progress\",{\"1\":{\"5\":1}}],[\"proposal\",{\"1\":{\"9\":1}}],[\"proposals\",{\"1\":{\"4\":2}}],[\"propose\",{\"1\":{\"5\":1}}],[\"proposed\",{\"1\":{\"4\":1}}],[\"proposing\",{\"1\":{\"2\":1}}],[\"produce\",{\"1\":{\"0\":1}}],[\"project\",{\"1\":{\"0\":1,\"4\":3,\"6\":1}}],[\"provide\",{\"1\":{\"0\":1}}],[\"process\",{\"0\":{\"2\":1,\"5\":1},\"1\":{\"0\":2,\"1\":2,\"2\":3,\"4\":1,\"5\":1,\"6\":1,\"8\":1,\"9\":2,\"10\":2,\"11\":1}}],[\"please\",{\"1\":{\"3\":1}}],[\"platform\",{\"1\":{\"2\":1}}],[\"possibly\",{\"1\":{\"9\":1}}],[\"possible\",{\"1\":{\"5\":1}}],[\"position\",{\"1\":{\"5\":2}}],[\"post\",{\"1\":{\"8\":1}}],[\"posted\",{\"1\":{\"7\":1}}],[\"postponed\",{\"1\":{\"9\":5}}],[\"postpone\",{\"1\":{\"5\":1,\"9\":2}}],[\"postponement\",{\"0\":{\"9\":1},\"1\":{\"1\":1}}],[\"posting\",{\"1\":{\"4\":1}}],[\"poorly\",{\"1\":{\"5\":1}}],[\"points\",{\"1\":{\"5\":1}}],[\"point\",{\"1\":{\"5\":3}}],[\"polite\",{\"1\":{\"2\":1}}],[\"passed\",{\"1\":{\"9\":1}}],[\"parallelism\",{\"1\":{\"2\":1}}],[\"parts\",{\"1\":{\"11\":1}}],[\"participants\",{\"1\":{\"5\":1}}],[\"particular\",{\"1\":{\"5\":1,\"6\":1}}],[\"particularly\",{\"1\":{\"4\":1}}],[\"part\",{\"1\":{\"2\":1,\"9\":1}}],[\"path\",{\"1\":{\"0\":1}}],[\"push\",{\"1\":{\"5\":1}}],[\"pursuing\",{\"1\":{\"4\":1}}],[\"pursue\",{\"1\":{\"4\":1}}],[\"put\",{\"1\":{\"0\":1,\"5\":1}}],[\"pull\",{\"1\":{\"0\":1,\"2\":1,\"5\":10,\"6\":2,\"7\":3,\"9\":4}}],[\"above\",{\"1\":{\"12\":1}}],[\"about\",{\"1\":{\"0\":1,\"5\":1,\"6\":2,\"7\":1,\"9\":2}}],[\"apache\",{\"1\":{\"11\":3,\"12\":1}}],[\"appropriate\",{\"1\":{\"9\":1}}],[\"afford\",{\"1\":{\"9\":1}}],[\"after\",{\"1\":{\"5\":1,\"7\":1,\"8\":1,\"9\":1}}],[\"away\",{\"1\":{\"8\":1}}],[\"agreed\",{\"1\":{\"6\":1}}],[\"against\",{\"1\":{\"5\":1}}],[\"advertised\",{\"1\":{\"5\":1}}],[\"additional\",{\"1\":{\"12\":1}}],[\"additions\",{\"1\":{\"2\":3}}],[\"add\",{\"1\":{\"7\":1}}],[\"added\",{\"1\":{\"5\":1,\"6\":1}}],[\"amendments\",{\"1\":{\"6\":1}}],[\"amenable\",{\"1\":{\"6\":1}}],[\"ample\",{\"1\":{\"5\":1}}],[\"amongst\",{\"1\":{\"5\":1}}],[\"among\",{\"1\":{\"0\":1}}],[\"arbitrary\",{\"1\":{\"8\":1}}],[\"articulated\",{\"1\":{\"5\":1}}],[\"arguments\",{\"1\":{\"5\":1}}],[\"argument\",{\"1\":{\"5\":1}}],[\"areas\",{\"1\":{\"3\":1}}],[\"are\",{\"1\":{\"0\":1,\"2\":2,\"4\":1,\"5\":5,\"6\":1,\"7\":1,\"8\":1,\"9\":2,\"10\":1,\"11\":1}}],[\"authors\",{\"1\":{\"6\":2}}],[\"author\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"8\":2}}],[\"at\",{\"1\":{\"4\":1,\"5\":5,\"6\":1,\"7\":2,\"11\":1}}],[\"already\",{\"1\":{\"5\":1,\"8\":1,\"9\":1,\"11\":1}}],[\"along\",{\"1\":{\"5\":1}}],[\"also\",{\"1\":{\"5\":2,\"6\":1}}],[\"alternatives\",{\"1\":{\"5\":2}}],[\"although\",{\"1\":{\"4\":1}}],[\"all\",{\"0\":{\"10\":1},\"1\":{\"0\":1,\"1\":1,\"5\":3,\"6\":1,\"8\":1}}],[\"ahead\",{\"1\":{\"4\":1}}],[\"actually\",{\"1\":{\"5\":1,\"6\":1}}],[\"actively\",{\"1\":{\"4\":1}}],[\"active\",{\"0\":{\"0\":1},\"1\":{\"5\":1,\"6\":4,\"8\":1}}],[\"according\",{\"1\":{\"11\":1}}],[\"accordingly\",{\"1\":{\"5\":1}}],[\"accepted\",{\"1\":{\"5\":1,\"6\":3,\"8\":4}}],[\"acceptance\",{\"1\":{\"4\":1}}],[\"answer\",{\"1\":{\"9\":1}}],[\"anything\",{\"1\":{\"6\":1}}],[\"any\",{\"1\":{\"2\":1,\"5\":2,\"7\":1,\"8\":1,\"9\":1,\"12\":2}}],[\"an\",{\"0\":{\"4\":1,\"8\":1},\"1\":{\"1\":2,\"2\":2,\"3\":1,\"4\":2,\"5\":2,\"6\":2,\"8\":4,\"9\":3}}],[\"and\",{\"1\":{\"0\":6,\"2\":3,\"4\":3,\"5\":15,\"6\":4,\"7\":3,\"9\":1,\"10\":1,\"11\":1}}],[\"associated\",{\"1\":{\"8\":3}}],[\"assignee\",{\"1\":{\"5\":1}}],[\"assigned\",{\"1\":{\"5\":1,\"6\":2,\"8\":1}}],[\"assign\",{\"1\":{\"5\":1}}],[\"ascertain\",{\"1\":{\"4\":1}}],[\"ask\",{\"1\":{\"0\":1,\"8\":1,\"9\":1}}],[\"as\",{\"1\":{\"0\":1,\"4\":1,\"5\":6,\"6\":3,\"9\":4,\"10\":3,\"12\":2}}],[\"a\",{\"1\":{\"0\":4,\"2\":5,\"4\":5,\"5\":16,\"6\":7,\"7\":5,\"8\":2}}],[\"time\",{\"1\":{\"5\":1,\"6\":1,\"7\":1,\"9\":2}}],[\"triage\",{\"1\":{\"8\":1}}],[\"triaged\",{\"1\":{\"5\":1}}],[\"trying\",{\"1\":{\"5\":1,\"10\":1}}],[\"tracking\",{\"1\":{\"8\":1,\"11\":1}}],[\"tradeoffs\",{\"1\":{\"5\":2}}],[\"trap\",{\"1\":{\"2\":1}}],[\"tagged\",{\"1\":{\"9\":1}}],[\"task\",{\"1\":{\"6\":1}}],[\"take\",{\"1\":{\"6\":1}}],[\"taken\",{\"1\":{\"5\":1}}],[\"taking\",{\"1\":{\"5\":1}}],[\"talking\",{\"1\":{\"4\":1}}],[\"table\",{\"0\":{\"1\":1},\"1\":{\"1\":1}}],[\"ten\",{\"1\":{\"5\":1}}],[\"tend\",{\"1\":{\"5\":1}}],[\"text\",{\"1\":{\"5\":1}}],[\"template\",{\"1\":{\"5\":1}}],[\"terms\",{\"1\":{\"11\":1,\"12\":1}}],[\"term\",{\"1\":{\"4\":1}}],[\"team\",{\"0\":{\"3\":1},\"1\":{\"1\":1,\"3\":1,\"4\":1,\"5\":3,\"6\":2,\"7\":5,\"8\":1,\"9\":1}}],[\"teams\",{\"1\":{\"0\":1,\"4\":1}}],[\"t\",{\"1\":{\"4\":1,\"5\":2,\"9\":1}}],[\"think\",{\"1\":{\"9\":2}}],[\"this\",{\"0\":{\"2\":1,\"10\":1},\"1\":{\"1\":2,\"2\":1,\"4\":1,\"5\":7,\"9\":1,\"11\":1}}],[\"thus\",{\"1\":{\"8\":1}}],[\"thumb\",{\"1\":{\"4\":1}}],[\"thread\",{\"1\":{\"5\":3,\"7\":1}}],[\"through\",{\"1\":{\"0\":1,\"2\":1,\"5\":1,\"6\":1}}],[\"than\",{\"1\":{\"5\":1,\"10\":1}}],[\"that\",{\"1\":{\"0\":2,\"2\":3,\"4\":3,\"5\":11,\"6\":6,\"8\":4,\"9\":2}}],[\"those\",{\"1\":{\"2\":1,\"4\":1,\"5\":1,\"11\":1}}],[\"though\",{\"1\":{\"0\":1}}],[\"then\",{\"1\":{\"6\":1,\"9\":2}}],[\"their\",{\"1\":{\"5\":1,\"6\":1}}],[\"they\",{\"1\":{\"5\":1,\"9\":1}}],[\"there\",{\"1\":{\"4\":1,\"5\":2}}],[\"these\",{\"1\":{\"0\":1,\"4\":1,\"7\":1}}],[\"the\",{\"0\":{\"5\":1,\"6\":1},\"1\":{\"0\":6,\"1\":2,\"2\":7,\"3\":2,\"4\":13,\"5\":55,\"6\":21,\"7\":15,\"8\":10,\"9\":13,\"10\":3,\"11\":2,\"12\":2}}],[\"top\",{\"1\":{\"5\":1}}],[\"topic\",{\"1\":{\"4\":1,\"7\":1}}],[\"toward\",{\"1\":{\"4\":1}}],[\"too\",{\"0\":{\"10\":1},\"1\":{\"1\":1}}],[\"to\",{\"0\":{\"2\":1},\"1\":{\"0\":2,\"1\":1,\"2\":11,\"4\":3,\"5\":23,\"6\":12,\"7\":2,\"8\":4,\"9\":6,\"10\":2,\"11\":1}}],[\"identifying\",{\"1\":{\"5\":1}}],[\"ideas\",{\"1\":{\"5\":1}}],[\"idea\",{\"1\":{\"4\":2}}],[\"its\",{\"1\":{\"4\":1,\"5\":1,\"6\":1,\"8\":1,\"11\":1}}],[\"itself\",{\"1\":{\"2\":1,\"5\":2}}],[\"it\",{\"1\":{\"2\":1,\"4\":1,\"5\":4,\"6\":7,\"8\":2,\"9\":2}}],[\"items\",{\"1\":{\"2\":1}}],[\"io\",{\"1\":{\"2\":1}}],[\"if\",{\"1\":{\"2\":2,\"5\":2,\"7\":1,\"8\":2}}],[\"impose\",{\"1\":{\"10\":1}}],[\"impossible\",{\"1\":{\"5\":1}}],[\"imply\",{\"1\":{\"6\":1}}],[\"implies\",{\"1\":{\"6\":1}}],[\"implementation\",{\"1\":{\"6\":2,\"8\":3}}],[\"implement\",{\"1\":{\"2\":1,\"6\":1,\"8\":1}}],[\"implementing\",{\"0\":{\"8\":1},\"1\":{\"1\":1,\"6\":2,\"9\":1}}],[\"implemented\",{\"1\":{\"0\":1,\"5\":1,\"8\":1}}],[\"impact\",{\"1\":{\"4\":1,\"5\":1}}],[\"improve\",{\"1\":{\"2\":1}}],[\"improvements\",{\"1\":{\"0\":1}}],[\"inclusion\",{\"1\":{\"5\":1,\"12\":1}}],[\"include\",{\"1\":{\"2\":1,\"4\":1}}],[\"including\",{\"1\":{\"0\":1,\"2\":2}}],[\"in\",{\"1\":{\"5\":13,\"6\":5,\"7\":5,\"8\":3,\"9\":2,\"11\":1,\"12\":2}}],[\"indication\",{\"1\":{\"4\":1}}],[\"invisible\",{\"1\":{\"2\":1}}],[\"into\",{\"1\":{\"4\":1,\"5\":4}}],[\"intrinsics\",{\"1\":{\"2\":1}}],[\"intentionally\",{\"1\":{\"12\":1}}],[\"intend\",{\"1\":{\"2\":1}}],[\"intended\",{\"1\":{\"0\":1,\"10\":1}}],[\"interested\",{\"1\":{\"8\":1}}],[\"interface\",{\"1\":{\"2\":1}}],[\"integrate\",{\"1\":{\"5\":1}}],[\"informal\",{\"0\":{\"10\":1},\"1\":{\"1\":1,\"9\":1}}],[\"issue\",{\"1\":{\"5\":1,\"7\":1,\"8\":3,\"11\":1}}],[\"issues\",{\"1\":{\"4\":1,\"7\":1,\"8\":1}}],[\"is\",{\"0\":{\"5\":1,\"10\":1},\"1\":{\"0\":1,\"1\":2,\"2\":2,\"3\":1,\"4\":4,\"5\":17,\"6\":6,\"7\":3,\"8\":3,\"9\":4,\"10\":1,\"11\":1}}],[\"round\",{\"1\":{\"9\":2}}],[\"roadmap\",{\"1\":{\"4\":1}}],[\"right\",{\"1\":{\"8\":1,\"9\":1}}],[\"rationale\",{\"1\":{\"7\":1}}],[\"raised\",{\"1\":{\"5\":1}}],[\"rarely\",{\"1\":{\"5\":1}}],[\"rubber\",{\"1\":{\"6\":1}}],[\"rule\",{\"1\":{\"4\":1}}],[\"rust\",{\"0\":{\"0\":1},\"1\":{\"0\":2,\"2\":3,\"3\":1,\"5\":3,\"6\":2,\"8\":2}}],[\"re\",{\"1\":{\"9\":1}}],[\"rejection\",{\"1\":{\"9\":1}}],[\"rejected\",{\"1\":{\"4\":2}}],[\"reasonable\",{\"1\":{\"10\":1}}],[\"reasoning\",{\"1\":{\"7\":1}}],[\"reached\",{\"1\":{\"5\":1}}],[\"reach\",{\"1\":{\"5\":1}}],[\"regularly\",{\"1\":{\"7\":1}}],[\"release\",{\"1\":{\"6\":1}}],[\"relevant\",{\"1\":{\"4\":1,\"5\":1,\"7\":1,\"9\":1}}],[\"result\",{\"1\":{\"6\":1}}],[\"responsibility\",{\"1\":{\"6\":1}}],[\"response\",{\"1\":{\"5\":1,\"9\":1}}],[\"reflect\",{\"1\":{\"6\":2}}],[\"refactoring\",{\"1\":{\"2\":1}}],[\"rebase\",{\"1\":{\"5\":1}}],[\"revise\",{\"1\":{\"5\":1}}],[\"review\",{\"1\":{\"5\":1,\"8\":1}}],[\"reviewing\",{\"0\":{\"7\":1},\"1\":{\"1\":1}}],[\"reviewed\",{\"1\":{\"0\":1}}],[\"receive\",{\"1\":{\"5\":2}}],[\"received\",{\"1\":{\"5\":1}}],[\"receiving\",{\"1\":{\"4\":1}}],[\"rename\",{\"1\":{\"5\":2}}],[\"represent\",{\"1\":{\"8\":2}}],[\"repository\",{\"1\":{\"5\":2,\"8\":2,\"11\":2}}],[\"repo\",{\"1\":{\"4\":1,\"5\":1,\"6\":1}}],[\"rephrasing\",{\"1\":{\"2\":1}}],[\"removal\",{\"1\":{\"2\":1}}],[\"removing\",{\"1\":{\"2\":1}}],[\"reorganizing\",{\"1\":{\"2\":1}}],[\"requires\",{\"1\":{\"4\":1}}],[\"required\",{\"1\":{\"3\":1}}],[\"require\",{\"1\":{\"2\":1,\"5\":1}}],[\"requests\",{\"1\":{\"6\":1,\"9\":2}}],[\"request\",{\"1\":{\"0\":2,\"2\":2,\"5\":10,\"6\":1,\"7\":3,\"9\":2}}],[\"rfc\",{\"0\":{\"0\":2,\"4\":1,\"6\":1,\"8\":1,\"9\":1},\"1\":{\"0\":1,\"1\":4,\"2\":4,\"3\":1,\"4\":6,\"5\":20,\"6\":7,\"7\":3,\"8\":5,\"9\":5,\"11\":1}}],[\"rfcs\",{\"0\":{\"0\":1,\"7\":1},\"1\":{\"1\":1,\"4\":1,\"5\":4,\"6\":3,\"7\":1,\"8\":2}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
